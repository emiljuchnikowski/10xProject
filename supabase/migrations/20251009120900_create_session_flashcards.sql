-- migration: create session_flashcards table
-- purpose: track individual flashcard reviews within learning sessions with spaced repetition data
-- affected tables: session_flashcards
-- special considerations:
--   - links flashcards to learning sessions with review results
--   - stores spaced repetition algorithm parameters (interval, ease factor, repetitions)
--   - result field stores quality rating (e.g., 0-5 for sm2 algorithm)
--   - next_due_at determines when flashcard should be reviewed again
--   - cascade delete when session is deleted
--   - unique constraint ensures flashcard appears only once per session

-- create session_flashcards table
create table session_flashcards (
  id integer primary key generated by default as identity,
  session_id integer not null references learning_sessions(id) on delete cascade,
  flashcard_id integer not null references flashcards(id) on delete cascade,
  order_index integer not null default 0,
  shown_at timestamptz,
  answered_at timestamptz,
  result smallint,
  interval_days integer,
  ease_factor real,
  repetitions integer,
  next_due_at timestamptz,
  notes text,
  created_at timestamptz not null default now(),
  constraint session_flashcards_session_flashcard_unique unique (session_id, flashcard_id)
);

-- create index on session_id for faster lookups by session
create index session_flashcards_session_id_idx on session_flashcards(session_id);

-- create index on flashcard_id for faster lookups by flashcard
create index session_flashcards_flashcard_id_idx on session_flashcards(flashcard_id);

-- create index on next_due_at for scheduling queries (finding cards due for review)
create index session_flashcards_next_due_at_idx on session_flashcards(next_due_at);
